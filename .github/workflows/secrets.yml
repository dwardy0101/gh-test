name: Encrypted Base64 Secret Transfer

on:
  workflow_dispatch:
    inputs:
      secret_token:
        description: 'Sensitive token input'
        type: string
        required: true

      secret_pass:
        description: 'Sensitive pass input'
        type: string
        required: true

jobs:
  # Job 1: Read a secret and encrypt
  github-secrets:
    runs-on: ubuntu-latest
    name: A Job to read a secret
    steps:
      - id: read-secret
        shell: bash
        run: |
          SECRET_TOKEN=$(jq -r '.inputs.secret_token' "$GITHUB_EVENT_PATH")
          SECRET_PASS=$(jq -r '.inputs.secret_pass' "$GITHUB_EVENT_PATH")
          echo "::add-mask::$SECRET_TOKEN"
          echo "::add-mask::$SECRET_PASS"
          
          BINARY_ENCRYPTED_TOKEN=$(echo -n "$SECRET_TOKEN" | openssl enc -aes-256-cbc -pbkdf2 -salt -k "$SECRET_PASS");
          ENCRYPTED_TOKEN=$(echo -n "$BINARY_ENCRYPTED_TOKEN" | base64);
          echo "our-token=$ENCRYPTED_TOKEN" >> $GITHUB_OUTPUT

          BINARY_ENCRYPTED_PASS=$(echo -n "$SECRET_PASS" | openssl enc -aes-256-cbc -pbkdf2 -salt -k "$SECRET_PASS");
          ENCRYPTED_PASS=$(echo -n "$BINARY_ENCRYPTED_PASS" | base64);
          echo "our-pass=$ENCRYPTED_PASS" >> $GITHUB_OUTPUT
    outputs:
      read-token: ${{ steps.read-secret.outputs.our-token }}
      read-pass: ${{ steps.read-secret.outputs.our-pass }}

  # Job 2: Use secret
  use-secret:
    needs: github-secrets
    runs-on: ubuntu-latest
    name: A Job to use secret
    steps:
    # Step 1: Decrypt the token using OpenSSL
    - id: decrypt-token
      shell: bash
      run: |
        ENCRYPTED_PASS=${{ needs.github-secrets.outputs.read-pass }};
        BINARY_ENCRYPTED_PASS=$(echo -n "$ENCRYPTED_PASS" | base64 --decode);
        OUR_PASS=$(echo -n "$BINARY_ENCRYPTED_PASS" | openssl enc -aes-256-cbc -pbkdf2 -d -salt -k "${{ github.event.inputs.secret_pass }}");
        
        ENCRYPTED_TOKEN=${{ needs.github-secrets.outputs.read-token }};
        BINARY_ENCRYPTED_TOKEN=$(echo -n "$ENCRYPTED_TOKEN" | base64 --decode);
        OUR_TOKEN=$(echo -n "$BINARY_ENCRYPTED_TOKEN" | openssl enc -aes-256-cbc -pbkdf2 -d -salt -k "$OUR_PASS");
        echo "our-token=$OUR_TOKEN" >> $GITHUB_OUTPUT

    # Step 2: Print out our secret
    - id: print-secret
      shell: bash
      run: echo "our-token:${{ steps.decrypt-token.outputs.our-token }}"
